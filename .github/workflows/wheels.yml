name: Build & Release wheels

on:
  push:
    tags: [ 'v*' ]

permissions:
  contents: write

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest, windows-latest, macos-latest ]
        python: [ '3.10', '3.11', '3.12', '3.13' ]
    runs-on: ${{ matrix.os }}
    name: wheel-${{ matrix.os }}-py${{ matrix.python }}

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python }}

      - name: Build wheel (host build)
        if: ${{ matrix.os != 'ubuntu-latest' }}
        uses: PyO3/maturin-action@v1
        with:
          command: build
          args: --release --out wheelhouse --features parallel
          manylinux: off

      - name: Build wheel (manylinux)
        if: ${{ matrix.os == 'ubuntu-latest' }}
        uses: PyO3/maturin-action@v1
        with:
          command: build
          manylinux: auto
          args: >
            --release
            --out wheelhouse
            --features parallel
            -i python${{ matrix.python }}

      - name: Upload wheel artefact
        uses: actions/upload-artifact@v4
        with:
          name: wheel-${{ matrix.os }}-py${{ matrix.python }}
          path: wheelhouse/*.whl
          if-no-files-found: error

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v4
        with: { path: collected }

      - name: Assemble dist/
        run: |
          mkdir -p dist
          find collected -name '*.whl' -exec cp -v '{}' dist/ ';'

      - name: Create / update GitHub Release
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v2
        with: { files: dist/*.whl }
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
